struct Point {
  int x;
  int y;
};

int f(int x, bool b) {}
void g() {
  int a;
  bool b;
  struct Point p;
  p.x = a;
  b = a == 3;
  f(a + p.y * 2, b);
  g();
}
int h(int h) {
  int t;
  h = 5;
  while (5 == 3) {
  }
  repeat(h == 3) {}
}

int main() {
  int a;
  a = 3;
  if (a == 1) {
    int a;
    a = 4;
    if (a == 1) {
      int a;
      int c;
      a = 4;
    } else {
      int a;
      int b;
      a = a;
    }
  }
  while (a == 1) {
    int b;
    while (b < a) {
      int a;
      int c;
      a = 1;
      while (c == 1) {
        cout << a;
      }
    }
  }
  cout << a;

  return 1;
}

struct S {
    int aa;
    bool bb;
    struct Point cc; 
};

struct Point p1;

void test(int a1, int b1) {
    int z;
    int zz;
    struct S s1;

    p1.x = 3;
    p1.y = 4;
    s1.aa = 5;
    s1.cc.x = 6;
    
    
    s1.cc.y = b1;
    zz = s1.cc.y;
    z = p1.x * p1.y + p1.x / s1.aa / p1.y - 6 * 2 +1;

    if (a1 >= z ){
        bool v1;
        bool v2;
        bool v3;
        bool v4;
        v1 = b1 <= p1.x;
        v2 = p1.x > s1.aa; 
        v3 = a1 == zz || b1 == z || !v1;
        v4 = v1 && v3 || v2;
        return;

    }
    else{
        bool v1;
        bool v2;
        struct S s2;
        s2.aa = 7;
        s2.bb = a1;
        v1 = (a1 - b1) < 0 && (s2.aa * s2.bb) > 10;
        cin >> s2.aa;
        cout << s2.bb;
    }
}
bool f1(bool v1){
    int a;
    int b;
    a = 2;
    b = 3;
    test(a,b);
    repeat( a != 4){
        cout << a;
    }

    if( -a - b + 4 * 0 + b / 3 != 0){
        return true;
    }
    return false;
}

