struct Point{
    int x;
    int y;
};

int f(int x, bool b) {
}

void g() {
    int a;
    bool b;
    struct Point p;
    (p(Point)).x(int) = a(int);
    b(bool) = (a(int) == 3);
    f(int,bool->int)((a(int) + ((p(Point)).y(int) * 2)), b(bool));
    g(->void)();
}

int h(int h) {
    int t;
    h(int) = 5;
    while ((5 == 3)) {
    }
    repeat ((h(int) == 3)) {
    }
}

int main() {
    int a;
    a(int) = 3;
    if ((a(int) == 1)) {
        int a;
        a(int) = 4;
        if ((a(int) == 1)) {
            int a;
            int c;
            a(int) = 4;
        }
        else {
            int a;
            int b;
            a(int) = a(int);
        }
    }
    while ((a(int) == 1)) {
        int b;
        while ((b(int) < a(int))) {
            int a;
            int c;
            a(int) = 1;
            while ((c(int) == 1)) {
                cout << a(int);
            }
        }
    }
    cout << a(int);
    return 1;
}

struct S{
    int aa;
    bool bb;
    struct Point cc;
};

struct Point p1;
void test(int a1, int b1) {
    int z;
    int zz;
    struct S s1;
    (p1(Point)).x(int) = 3;
    (p1(Point)).y(int) = 4;
    (s1(S)).aa(int) = 5;
    ((s1(S)).cc(Point)).x(int) = 6;
    ((s1(S)).cc(Point)).y(int) = b1(int);
    zz(int) = ((s1(S)).cc(Point)).y(int);
    z(int) = (((((p1(Point)).x(int) * (p1(Point)).y(int)) + (((p1(Point)).x(int) / (s1(S)).aa(int)) / (p1(Point)).y(int))) - (6 * 2)) + 1);
    if ((a1(int) >= z(int))) {
        bool v1;
        bool v2;
        bool v3;
        bool v4;
        v1(bool) = (b1(int) <= (p1(Point)).x(int));
        v2(bool) = ((p1(Point)).x(int) > (s1(S)).aa(int));
        v3(bool) = (((a1(int) == zz(int)) || (b1(int) == z(int))) || (!v1(bool)));
        v4(bool) = ((v1(bool) && v3(bool)) || v2(bool));
        return;
    }
    else {
        bool v1;
        bool v2;
        struct S s2;
        (s2(S)).aa(int) = 7;
        (s2(S)).bb(bool) = a1(int);
        v1(bool) = (((a1(int) - b1(int)) < 0) && (((s2(S)).aa(int) * (s2(S)).bb(bool)) > 10));
        cin >> (s2(S)).aa(int);
        cout << (s2(S)).bb(bool);
    }
}

bool f1(bool v1) {
    int a;
    int b;
    a(int) = 2;
    b(int) = 3;
    test(int,int->void)(a(int), b(int));
    repeat ((a(int) != 4)) {
        cout << a(int);
    }
    if ((((((-a(int)) - b(int)) + (4 * 0)) + (b(int) / 3)) != 0)) {
        return true;
    }
    return false;
}

